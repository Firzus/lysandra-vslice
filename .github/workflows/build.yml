name: Build Unity Game & Generate Manifest

on:
  push:
    tags:
      - "v*"

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            targetPlatform: StandaloneWindows64
            target: windows
            extension: windows.zip

          - os: macos-latest
            targetPlatform: StandaloneOSX
            target: macos
            extension: macos.zip

          - os: ubuntu-latest
            targetPlatform: StandaloneLinux64
            target: linux
            extension: linux.zip

    runs-on: ${{ matrix.os }}
    name: Build for ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('**/*.cs') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-

      - uses: game-ci/unity-builder@v4
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          allowDirtyBuild: true

      - name: Zip Build
        run: |
          $zipName = "game-${{ github.ref_name }}-${{ matrix.extension }}"
          $zipPath = "${{ github.workspace }}/$zipName"

          if ($IsWindows) {
            Compress-Archive -Path "build/${{ matrix.targetPlatform }}/*" -DestinationPath "$zipPath"
          } else {
            cd build/${{ matrix.targetPlatform }}
            zip -r "$zipPath" .
          }
        shell: pwsh

      - name: Compute SHA256
        id: hash
        run: |
          FILE="game-${{ github.ref_name }}-${{ matrix.extension }}"
          HASH=$(shasum -a 256 "$FILE" | cut -d ' ' -f 1)
          echo "sha256=$HASH" >> $GITHUB_OUTPUT

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: game-${{ github.ref_name }}-${{ matrix.extension }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Write manifest line
        run: |
          echo "${{ matrix.target }}|game-${{ github.ref_name }}-${{ matrix.extension }}|${{ steps.hash.outputs.sha256 }}" >> manifest-data.txt

      - uses: actions/upload-artifact@v4
        with:
          name: manifest-parts
          path: manifest-data.txt

  generate-manifest:
    name: Generate latest.json manifest
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-meta
          path: meta

      - name: Create latest.json
        run: |
          echo '{' > latest.json
          echo '  "version": "${{ github.ref_name }}",' >> latest.json
          echo '  "zip": {' >> latest.json

          awk -F'|' '{ 
            printf "    \"%s\": {\n", $1
            printf "      \"url\": \"https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/%s\",\n", $2
            printf "      \"sha256\": \"%s\"\n", $3
            if (NR != 3) { print "    }," } else { print "    }" }
          }' meta/build-meta.txt >> latest.json

          echo '  }' >> latest.json
          echo '}' >> latest.json

      - name: Upload latest.json to release
        uses: softprops/action-gh-release@v1
        with:
          files: latest.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
