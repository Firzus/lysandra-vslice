name: unity-ci

on:
  push:
    tags:
      - "v*.*.*"
      - "v*.*.*-*"
  pull_request:
  workflow_dispatch:

jobs:
  build-windows:
    name: Build for ${{ matrix.targetPlatform }} (Windows)
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        unityVersion: [6000.0.38f1]
        targetPlatform: [StandaloneWindows64]
        projectPath: [.] # racine du projet
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v4
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-
      - name: Build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build
      - name: Publish to GitHub Releases
        if: ${{ github.ref_type == 'tag' }}
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            build/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: Run PlayMode tests
    runs-on: ubuntu-latest
    needs: build-windows
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - name: Run PlayMode tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: .
          unityVersion: 6000.0.38f1
          testMode: PlayMode
          artifactsPath: TestResults
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: TestResults
          path: TestResults
